package controlador;


import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import Textos.Textos;
import arte.dibujo;
import dao.DaoAtaque;
import dao.DaoLogin;
import dao.DaoAtaque;
import dao.DaoPersonaje;
import modelo.Ataque;
import modelo.Batalla;
import modelo.Login;
import modelo.Personaje;

public class Partida {
	
	private static Scanner sc= new Scanner(System.in);
	private static Personaje protagonista;

	// *** MEN√ö PRINCIPAL DEL JUEGO ***
	public static void mostrarMenu() {
        Scanner sc = new Scanner(System.in);
        boolean salir = false;
        
        while (!salir) {
            System.out.println("\n=== MEN√ö PRINCIPAL === ");
            System.out.println("1. Iniciar sesi√≥n ‚ú®");
            System.out.println("2. Registrarse üñäÔ∏è ");
            System.out.println("3. Consultar Ranking üîç");
            System.out.println("4. Salir üëãüèª");
            System.out.print("Selecciona una opci√≥n (1-4): ");

            int opcion = sc.nextInt();
            sc.nextLine(); // limpia el salto de l√≠nea

            switch (opcion) {
                case 1:
                	iniciarSesion();
                	break;
                case 2:
                	registrarUsuario();
                case 3:
                	System.out.println("RANKING.");
                	break;
                case 4:
                	salir=true;
                	break;
                default:
                	System.out.println("Error: Opci√≥n no valida.");
            }
        }

        sc.close();
    }
	
	//*********************************************************************************
	//************************** METODOS DE LOGIN *************************************
	//*********************************************************************************
	
	// metodo para iniciar sesi√≥n
    private static void iniciarSesion() {
        System.out.println("\n=== INICIAR SESI√ìN ===");
        System.out.print("Introduce tu nombre de usuario: ");
        String nombreUsuario = sc.nextLine();

        System.out.print("Introduce tu contrase√±a: ");
        String contrasena = sc.nextLine();

        // Creamos el objeto con los datos
        Login datosUsuario = new Login(nombreUsuario, contrasena);
        
        try {
        	//llave para acceder a los metodos de DaoLogin
            DaoLogin daoLogin = DaoLogin.getInstance();
           
            if (daoLogin.verificarLogin(datosUsuario)==true) {
                System.out.println("‚úÖ Sesi√≥n iniciada correctamente. ¬°Bienvenido " + nombreUsuario + "!");
                iniciarJuego(); 
            } else {
                System.out.println("‚ùå Usuario o contrase√±a incorrectos.");
            }

        } catch (Exception e) {
            System.out.println("‚ö†Ô∏è Error al iniciar sesi√≥n: " + e.getMessage());
        }
    }
    
 // metodo para registrar un nuevo usuario
    private static void registrarUsuario() {

        System.out.println("\n=== REGISTRO DE USUARIO NUEVO ===");

        // Pedimos el nombre de usuario
        System.out.print("üëâ Escribe un nombre de usuario: ");
        String nombreUsuario =sc.nextLine();

        // Pedimos la contrase√±a
        System.out.print("üîí Escribe una contrase√±a: ");
        String contrasena = sc.nextLine();

        // Creamos un objeto Login con los datos introducidos
        Login nuevoUsuario = new Login(nombreUsuario, contrasena);

        try {
            //llave para acceder a lo metodos de DaoLogin
            DaoLogin daoLogin = DaoLogin.getInstance();

            // Comprobamos si ese usuario ya est√° registrado
            boolean yaExiste = daoLogin.usuarioExiste(nombreUsuario);

            //lo mismo que poner esto: if(dao.usuarioExiste(nombreUsuario))
            if (yaExiste==true) {
                System.out.println("‚ùå Ese nombre de usuario ya est√° en uso. Intenta con otro diferente.");
            } else {
                // Intentamos insertar el nuevo usuario
                boolean registradoCorrectamente = daoLogin.insertarUsuario(nuevoUsuario);

                //if (dao.insertarUsuario(nuevoUsuario))
                if (registradoCorrectamente==true) {
                    System.out.println("‚úÖ Usuario registrado con √©xito. ¬°Ahora puedes iniciar sesi√≥n!");
                } else {
                    System.out.println("‚ùå Hubo un problema al registrar al usuario.");
                }
            }

        } catch (Exception error) {
            // Mostramos el error si algo falla
            System.out.println("‚ö†Ô∏è Ocurri√≥ un error al registrar: " + error.getMessage());
        }
    }

	//*********************************************************************************
    //*************************** OTROS METODOS ***************************************
	//*********************************************************************************

    // *** INICIAR JUEGO ***
    public static void iniciarJuego() throws SQLException {
        // Mostrar introducci√≥n
        dibujo.logo();
        System.out.println("üéÆ Aqu√≠ empieza tu aventura en Doraemon POO...");
        dibujo.caraDoraemon();
        Textos.intro();

        // Elegir personaje principal
        seleccionarPersonaje();
        
        //llave de acceso a los metodos de Dao Personaje
        DaoPersonaje daoPersonaje = DaoPersonaje.getInstance();
        DaoAtaque daoAtaque = DaoAtaque.getInstance();

        // Buscar un enemigo seg√∫n el personaje elegido
        Personaje enemigo = daoPersonaje.obtenerEnemigoPorLugarDePersonaje(protagonista.getId());

        if (enemigo == null) {
            System.out.println("‚ùå No se encontr√≥ enemigo para este lugar.");
            return;
        }

        // Cargar ataques del enemigo
        enemigo.setAtaques(daoAtaque.obtenerAtaquesDePersonaje(enemigo.getId()));

        // Mostrar enemigo y empezar la batalla
        System.out.println("‚öîÔ∏è Te enfrentas a: " + enemigo.getNombre());
        Batalla batalla = new Batalla(protagonista, enemigo);

        boolean ganoBatalla = batalla.iniciarCombate(); // Este m√©todo deber√≠a devolver true o false

        // Resultado de la batalla
        if (ganoBatalla) {
            System.out.println("‚úÖ ¬°Ganaste! " + protagonista.getNombre() + " contin√∫a la aventura.");
        } else {
            System.out.println("üíÄ Has sido derrotado. Fin del juego.");
        }
    }

    
    private static void seleccionarPersonaje() throws SQLException {
        Scanner sc = new Scanner(System.in);
        
        //llave de acceso a los metodos de DaoPersonaje y DaoAtaque
        DaoPersonaje daoPersonaje = DaoPersonaje.getInstance();
        DaoAtaque daoAtaque = DaoAtaque.getInstance();

        // Mostrar lista de personajes
        ArrayList<Personaje> listaPersonaje = (ArrayList<Personaje>) daoPersonaje.mostrarPersonajesPrincipales();

        System.out.println("\nüìú Personajes disponibles:");
        for (int i = 0; i < listaPersonaje.size(); i++) {
            Personaje p = listaPersonaje.get(i);
            System.out.println(p.getId() + " - " + p.getNombre());
        }

        // Elegir personaje
        System.out.print("üîç Escribe el ID del personaje que quieres usar: ");
        int idElegido = sc.nextInt();

        //Almacenamos en protagonista la id del person
        protagonista = daoPersonaje.seleccionarPersonaje(idElegido);

        // Validar selecci√≥n
        if (protagonista == null) {
            System.out.println("‚ùå ID inv√°lido. No se seleccion√≥ personaje.");
            return;
        }

        // Mostrar personaje y ataques
        System.out.println("‚úÖ Elegiste a: " + protagonista.getNombre() + " (Vida: " + protagonista.getVida() + ")");
        
        ArrayList<Ataque> ataques = (ArrayList<Ataque>) daoAtaque.obtenerAtaquesDePersonaje(protagonista.getId());
        protagonista.setAtaques(ataques);

        System.out.println("\n‚öîÔ∏è Ataques disponibles:");
        for (int i = 0; i < ataques.size(); i++) {
            Ataque a = ataques.get(i);
            System.out.println((i + 1) + ". " + a.getNombre() + ": " + a.getDescripcion() + " (Da√±o: " + a.getDano() + ")");
        }
    }


}
/*
 * 
 * danoExtra=random((5)+1);
 * danoExtratotal=
 * 
 * if(danoExtra>0){
 * vida
 * 
 * 
 * */
